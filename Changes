# This file documents the revision history for Perl extension Catalyst.

5.90041 - 2013-06-14
  - Bug fix release to fix regressions introduced in previous.  I would consider
    this a likely upgrade and if you are having trouble with the previous I hope
    this fixes all of them.
  - Fix regression with the cored Unicode plugin that broke systems where you are
    setting encoding type in an external configuration file
  - Fixed circular dependency introduced when we cored the unicode plugin tests
  - Fixed a longstanding problem with stats when locale uses , instead of . for
    number decimals
  - Fixed some docs that didn't properly date the previous release.

5.90040 - 2013-06-12
  ! Stricter checking of attributes in Catalyst::DispatchType::Chained:
    1) Only allow one of either :CaptureArgs or :Args
    2) :CaptureArgs() argument must be numeric
    3) :CaptureArgs() and :Args() arguments cannot be negative
  - Add Devel::InnerPackage to dependencies, fixing tests on perl 5.17.11
    as it's been removed from core. RT#84787
  - New support for closing over the PSGI $writer object, useful for working
    with event loops.
  - lets you access a psgix.io socket, if your server supports it, for manual
    handling of the client - server communication, such as for websockets.
  - Fix waiting for the server to start in t/author/http-server.t
  - new config flag 'abort_chain_on_error_fix' that exits immediately when a
    action in an action chain throws and error (fixes issues where currently
    the remaining actions are processed and the error is handled at chain
    termination).
  - Cored the Encoding plugin.  Now get unicode out of the box by just setting
    $c->config->{encoding} = 'UTF-8'.  BACKCOMPAT WARNING: If you are using 
    the Encoding plugin on CPAN, we skip it to avoid double encoding issues, so
    you should remove it from your plugin list, HOWEVER the 'encoding' config
    setting is now undef, rather than 'UTF-8' (this was done to avoid breaking
    people's existing applications) so you should add the encoding setting to 
    you global config.  There's some other changes between the stand alone
    plugin and the cored version, if you use it be sure to see Catalyst::Upgrading
    for more.
  - minor documentation typo fixes and updates

5.90030 - 2013-04-12
  ! POSSIBLE BREAKING CHANGE: Removed Regexp dispatch type from core, and put
    it in an external package.  If you need Regexp dispatch types you should
    add "Catalyst-DispatchType-Regex" as a distribution to your build system.
  - make $app->uri_for and related methods return something sane, when called
    as an application method, instead of a context method.  Now if you call
    MyApp::Web->uri_for(...) you will get a generic URI object that you need to
    resolve manually.
  - documentation updates around forwarding to chained actions.
  - Fixed bug when a PSGI engine need to use psgix logger.
  - Added cpanfile as a way to notice we are a dev checkout.
  - Added 'x-tunneled-method' HTTP Header method override to match features in
    Catalyst::Action::REST and in other similar systems on CPAN.
  - smarter valiation around action attributes.

5.90020 - 2013-02-22
  ! Catalyst::Action now defines 'match_captures' so it is no long considered
    an optional method.  This might break you code if you have made custom
    action roles/classes where you define 'match_captures'.  You must change
    your code to use a method modifier (such as 'around').
  - New match method "Method($HTTP_METHOD)" where $HTTP_METHOD in (GET, POST,
    PUT, HEAD, DELETE, OPTION) and shortcuts in controllers called "GET, POST
    PUT, HEAD, DELETE, OPTION").  Tests and documentation.  Please note if you
    are currently using Catalyst::ActionRole::MatchRequestMethods there may
    be compatibility issues.  You should remove that actionrole since the built
    in behavior is compatible on its own.
  - Initial debug screen now shows HTTP Method Match info
  - security fixes in the way we handle redirects
  - Make Catalyst::Engine and Catalyst::Base immutable
  - Some test and documentation improvements

5.90019 - 2012-12-04 21:31:00
  - Fix for perl 5.17.6 (commit g7dc8663). RT#81601
  - Fix for perl 5.8. RT#61122
  - Remove use of MooseX::Types as MooseX::Types is broken on perl5.8
    RT#77100 & RT#81121

5.90018 - 2012-10-23 20:55:00
  - Changed code in test suite so it no longer trips up on recent changes to
    HTTP::Message.

5.90017 - 2012-10-19 22:33:00
  - Change Catalyst _parse_attrs so that when sub attr handlers:

    1) Can return multiple pairs of new attributes.
    2) Get their returned attributes passed through the correct attribute handler.

    e.g sub _parse_Whatever_attr { return Chained => 'foo', PathPart => 'bar' }

    Will now work because both new attributes are respected, and the Chained
    attribute is passed to _parse_Chained_attr and fixed up correctly by that.

  - In Catalyst::Test, don't mangle headers of non-HTML responses. RT#79043

  - Refactor request and response class construction to add methods
    that roles can hook to feed extra parameters into the constructor
    of request or response classes.

5.90016 - 2012-08-16 15:35:00
  - prepare_parameters is no longer an attribute builder.  It is now a method
    that calls the correct underlying functionality (Bill Moseley++)
  - Updated Makefile.PL to handle MacOXS tar
  - Fix uri_for to handle a stringifiable object
  - Fix model/view/controller methods to handle stringifiable objects
  - Fix RT#78377 - IIS7 ignores response body for 3xx requests, which
    causes (a different) response to be broken when using keepalive.
    Fixed by applying Middleware which removes the response body and
    content length that Catalyst supplies with redirects.

5.90015 - 2012-06-30 16:57:00
  - Fix $c->finalize_headers getting called twice. RT#78090
  - Fix test fails in Catalyst-Plugin-Session-State-Cookie. RT#76179
  - Fix test fails in Catalyst-Plugin-StackTrace
  - Fix test fails in Test-WWW-Mechanize-Catalyst

5.90014 - 2012-06-26 10:00:00

  - Fix calling finalize_headers before writing body when using $c->write /
    $c->res->write (fixes RT#76179).

5.90013 - 2012-06-21 10:40:00

  - Release previous TRIAL as stable.
  - We failed to note in the previous changelog that the Makefile.PL has been
    improved to make it easier for authors to bootstrap a developer install
    of Catalyst.

5.90013 - TRIAL 2012-06-07 20:21:00

 New features:
  - Merge Catalyst::Controller::ActionRole into Catalyst::Controller.

 Bug fixes:
  - Fix warnings in some matching cases for Action methods with
    Args(), when using Catalyst::DispatchType::Chained

  - Fix request body parameters to not be undef if no parameters
    are supplied.

  - Fix action_args config so that it can be specified in the
    top level config.

  - Fix t/author/http-server.t on Win32

  - Fix use of Test::Aggregate to make tests faster.

5.90012 - 2012-05-16 09:59:00

 Distribution META.yml changes:
  - author key is now correct, rather than what Module::Install
    mis-parses from the documentation.
  - x_authority key added.

 Bug fixes:
  - Fix request body parameters being multiply rebuilt. Fixes both
    RT#75607 and CatalystX::DebugFilter

  - Make plugin de-duplication work as intended originally, as whilst
    duplicate plugins are totally unwise, the C3 error given to the user
    is less than helpful.

  - Remove dependence on obscure behaviour in B::Hooks::EndOfScope
    for backward compatibility. This fixes issues with behaviour changes
    in bleadperl. RT#76437

  - Work around Moose bug RT#75367 which breaks
    Catalyst::Controller::DBIC::API.

 Documentation:
  - Fix documentation in Catalyst::Component to show attributes and
    calling readers, rather than accessing elements in the $self->{} hash
    directly.
  - Add note in Catalyst::Component to strongly disrecommend $self->config
  - Fix vague 'checkout' wording in Catalyst::Utils. RT#77000
  - Fix documentation for the 'secure' method in Catalyst:Request. RT#76710

5.90011 - 2012-03-08 16:43:00

 Bug fixes:
  - Simplification of the previous changes to Catalyst::ScriptRunner
    We now just push $FindBin::Bin/../lib to the @INC path again, but
    only if one of the dist indicator files (Makefile.PL Build.PL or
    dist.ini) can be found in $FindBin::Bin/../$_
    This avoids heuristics when the app is unloaded and therefore
    works better for extensions which have entire applications in
    their test suites.
  - Bug fix to again correctly detect checkouts in dist zilla using
    applications.
  - --background option for the server script now only closes
    STDIN, STDOUT and STDERR. This fixes issues with Log::Dispatch
    and other loggers which open a file handle when
  - Change incorrect use of File::Spec->catdir to File::Spec->catfile
    so that we work on platforms which care about this (VMS?)
  - Make it more obvious if our PSGI server doesn't pass in a response
    callback.

5.90010 - 2012-02-18 00:01:00

 Bug fixes:
  - Fix the previous fix to Catalyst::ScriptRunner which was resulting
    in the lib directory not being pushed onto @INC.
    This meant perl ./script/myapp_server.pl failed, however
    perl -Ilib ./script/myapp_server.pl would succeed.

5.90009 - 2012-02-16 09:06:00

 Bug fixes:
  - Fix the debug page so that it works as expected with the latest
    refactoring.

  - The Catalyst::Utils::home function is used to find if the application
    is a checkout in Catalyst::ScriptRunner. This means that a non-existant
    lib directory that is relative to the script install location is not
    included when not running from a checkout.

  - Fix dead links to cpansearch.perl.org to point to metacpan.org.

  - Require the latest version of B::Hooks::EndOfScope (0.10) to avoid an
    issue with new versions of Module::Runtime (0.012) on perl 5.10
    which stopped Catalyst::Controller from compiling.

  - In Catalyst::Test, don't mangle headers of non-HTML responses. RT#79043

5.90008 - TRIAL 2012-02-06 20:49:00

 New features and refactoring:
  - Much of the Catalyst::Engine code has been moved into Catalyst::Request
    and Catalyst::Response, to be able to better support asynchronous web
    servers such as Twiggy, by making the application engine more reenterant.

    This change is as a prequel to full asynchronous support inside Catalyst
    for AnyEvent and IO::Async backends, which allow highly scaleable streaming
    (for applications such as multi-part XML HTTPRequests, and Websockets).

 Deprecations:
  - This means that the $c->engine->env method to access the PSGI environment
    is now deprecated. The accessor for the PSGI env is now on Catalyst::Request
    as per applications which were using Catalyst::Engine::PSGI

    Catalyst::Engine::PSGI is now considered fully deprecated.

  - The private _dump method in Catalyst::Log is now deprecated. The dumper is
    not pluggable and which dumper to use should be a user choice. Using
    an imported Dump() or Dumper() function is less typing than $c->log->_dump
    and as this method is unused anywhere else in Catalyst, it has been scheduled
    for removal as a cleanup. Calling this method will now emit a stack trace
    on first call (but not on subsequent calls).

 Back compatibility fixes:
  - Applications still using Catalyst::Engine::PSGI as they rely on
    $c->request->env - this is now the provided (and recommended) way of
    accessing the raw PSGI environment.

 Tests:
  - Spurious warnings have been removed from the test suite

 Documentation:
  - Fix the display of PROJECT FOUNDER and CONTRIBUTORS sections in the
    documentation. These were erroneously being emitted when the Pod
    was converted to HTML for search.cpan.org

  - Fix documentation for the build_psgi_app app method. Previously the
    documentation advised that it provided the psgi app already wrapped
    in default middleware. This is not the case - it is the raw app psgi

5.90007 - 2011-11-22 20:35:00

  New features:
   - Implement a match_captures hook which, if it exists on an action,
     is called with the $ctx and \@captures and is expected to return
     true to continue the chain matching and false to stop matching.
     This can be used to implement action classes or roles which match
     conditionally (for example only matching captures which are integers).

  Bug fixes:
   - Lighttpd script name fix is only applied for lighttpd versions
     < 1.4.23. This should fix non-root installs of lighttpd in versions
     over that.
   - Prepare_action is now inside a try {} block, so that requests containing
     bad unicode can be appropriately trapped by
     Catalyst::Plugin::Unicode::Encoding

5.90006 - 2011-10-25 09:18:00

  New features:
   - A new 'run_options' class data method has been added to Catalyst.pm
     This is used to store all the options passed by scripts, allowing
     application authors to add custom options to their scripts then
     get them passed through to the application.

  Doumentation:
   - Clarify that if you manually write your own .psgi file, then optional
     proxy support (via the using_frontend_proxy config value) will not be
     enabled unless you explicitly apply the default middlewares from
     Catalyst, or you apply the middleware manually.

  Bug fixes:
   - Fix issue due to perl internals bugs in 5.8 and 5.10 (not present in
     other perl versions) require can pass the context inappropriately,
     meaning that some methods of loading classes can fail due to void
     context being passed throuh to make_immutable, causing it to not return
     a value.
     This bug caused loading Catalyst::Script::XXX to fail and is fixed
     both by bumping the Class::Load dependency, and also adding an explicit
     '1;' to the end of the classes, avoiding the context issue.

   - Fix using_frontend_proxy support in mod_perl by using the psgi wrapped
     in default middleware in mod_perl context, rather than the raw psgi.

5.90005 - 2011-10-22 13:35:00

  New features:

   - $c->uri_for_action can now take an array of CaptureArgs and Args
     If you have an action which has both, then you can now say:
     $c->uri_for_action('/myaction', [@captures, @args]);
     whereas before you had to say:
     $c->uri_for_action('/myaction', [@captures], @args);
     The previous form is still supported, however in many cases it is
     easier for the application code to not have to differentiate between
     the two.

   - Catalyst::ScriptRunner has been enhanced so that it will now
     load and apply traits, making it easier to customise.
     - MyApp::TraitFor::Script (if it exists) will be applied to all
       scripts in the application.
     - MyApp::TraitFor::Script::XXXX will be applied to the relevant script
       (for example MyApp::TraitFor::Script::Server will be applied to
       MyApp::Script::Server if it exists, or Catalyst::Script::Server
       otherwise).

  Documentation:

   - Document how to get the vhost of the request in $c->req->hostname
     to avoid confusion
   - Remove documentation showing Global / Regex / Private actionsi
     as whilst these still exist (and work), they are not recommended.
   - Remove references to the -Engine flag.
   - Remove references to the deprecated Catalyst->plugin method
   - Spelling fixed (and tested) throughout the documentation
   - Note that wrapping the setup method will not work with method modifiers
     and provide an alternative.

5.90004 - 2011-10-11 17:12:00

  Bug fixes:

   - Don't guess engine class names when setting an engine through
     MyApp->engine_class.

5.90003 - 2011-10-05 08:32:00
  Bug fixes:

   - Make default body reponses for 302s W3C compliant. RT#71237

   - Fix issue where groups of attributes to override controller actions
     in config would be (incorrectly) overwritten, if the parser for that
     attribute mangled the contents of the attribute. This was found
     with Catalyst::Controller::ActionRole, where Does => [ '+Foo' ]
     would be transformed to Does => [ 'Foo' ] and written back to config,
     whereas Does => '+Foo' would not be changed in config. RT#65463

  Enhancements:

   - Set a matching Content-type for the redirect if Catalyst sets the
     body. This is for compatibility with a WatchGuard Firewall.

  Backward compatibility fixes:

   - Restore (an almost empty) Catalyst::Engine::HTTP to the dist for old
     scripts which explictly require Catalyst::Engine::HTTP

  Documentation fixes:

   - Document Catalyst::Plugin::Authentication fails tests unless
     you use the latest version with Catalyst 5.9

   - Clarify that prepare is called as a class method

   - Clarify use of uri_for further. RT#57011

5.90002 - 2011-08-22 21:44:00
  Backward compatibility fixes:

    - Deploying via mod_perl in some cases is fixed by making
      Catalyst::EngineLoader detect mod_perl in more generic
      circumstances.
      https://github.com/miyagawa/Plack/issues/239

  Documentation fixes:

    - Fix incorrect example in Catalyst::PSGI.
    - Add note that if you are using the PSGI engine, then $c->req->env
      needs to become $c->engine->env when you upgrade.

5.90001 - 2011-08-15 22:42

 Realise that we accidentally chopped a digit off the versioning scheme
 without anyone noticing, which is a bad thing.

 Feel like a fool. Well done t0m.

 Cut another release.

5.9000 - 2011-08-15 22:18

 See Catalyst::Delta for the major changes in this release.

 Changelog since the last TRIAL release:

   Backward compatibility fixes:

    - Fix calling MyApp->engine_class to set the engine class manually.

    - Re-add a $res->headers->{status} field to Catalyst::Test responses.
      This _should_ be accessed with $c->res->code instead, but is here
      for backward compatibility.

   Documentation:

    - Documentation which was in the now removed Catalyst::Engine::* classes
      has been moved to Catalyst::Manual::Deployment

   Changes:

    - nginx specific behaviour is removed as it is not needed with any
      web server configuration I can come up with (recommended config is
      documented in Catalst::Manual::Deployment::nginx::FastCGI)

5.89003 2011-07-28 20:11:50 (TRIAL release)

 Backward compatibility fixes:

  - Application scripts which have not been upgraded to newer
    Catalyst::Script::XXX style scripts have been fixed

 Bug fixes:

  - mod_perl handler fixed to work with application classes which have manually
    been made immutable.

  - Scripts now force the Plack engine choice manually, rather than relying
    on auto-detection, as the automatic mechanism gets it wrong if (for
    example) Coro is loaded.

  - Server script option for --fork --keepalive are now handled by loading
    the Starman server, rather than silently ignored.

  - Server script options for --background and --pid are now fixed by
    using MooseX::Deamonize

  - Plack middlewares to deal with issues in Lighttpd and IIS6 are now
    automatically applied to applications and deployments which need them
    (when there is not a user written .psgi script available).
    This fixes compatibility with previous stable releases for applications
    deployed in these environments.

 Enhancements:

  - Catalyst::Test's remote_request method not uses Plack::Test to perform
    the remote request.

 Documentation:
  - Added a Catalyst::PSGI manual page with information about writing a .psgi
    file for your application.

   - Catalyst::Uprading has been improved, and the status of old Catalyst
     engines clarified.

 Deprecations:
  - Catalyst::Test's local_request function is now deprecated. You should just
    use the normal request function against a local server instead.

5.80033 2011-07-24 16:09:00

 Bug fixes:
  - Fix Catalyst::Request so that the hostname accessor is not incorrectly
    populated with 'localhost' if a reverse DNS lookup fails.

  - Fix Path actions debug screen to display number of arguments

  - Fix a regression that prevented configuring attributes for all actions using
    ->config(actions => { '*' => \%attrs }) from working

  - Append $\ in Catalyst::Response->print to more closely match
    IO::Handle's behaviour.

  - Fixed situation where a detach($action) from a forward within auto
    was not breaking out correctly

  - Fix the disable_component_resolution_regex_fallback config setting
    to also work in the $c->component method.

  - Handle users setting cookies with an undef value by not trying to
    output that cookie (rather than trying to do so and causing an exception
    as previously happened). A warning is logged if this occurs in debug
    mode.
  - Update tests to ignore $ENV{CATALYST_HOME} where required

  - Change repository metadata to point at git.

  - Clean namespaces in Catalyst::Request::Upload

  - Catalyst::Test: Fixes to action_ok, action_redirect and action_notfound
    test functions to be better documented, and have better default test
    names.

  - Update tests to ignore CATALYST_HOME env var.

5.89002 2011-03-02 11:30:00 (TRIAL release)

 Bug fixes:
  - Fix a couple of test failures caused by optional dependencies such as FCGI
    not being installed.

 Refactoring:
  - Simplified the API for getting a PSGI application code reference for a
    Catalyst application for use in, for example, .psgi files. See
    Catalyst::Upgrading for details.

5.89001 2011-03-01 15:27:00 (TRIAL release)

 Bug fixes:
  - Fixed command-line argument passing in Catalyst::Script::FastCGI.

  - Fixed Catalyst::Engine::Stomp compatibility. Applications using
    Catalyst::Engine::Stomp are believed to continue working without
    any changes with the new Catalyst major version.

  - Fixed issues auto-loading engine with older scripts.

 Known problems:
  - Catalyst::Engine::Wx is officially unsupported and BROKEN. If you
    are using this engine then please get in touch with us and we'll
    be happy to help with the changes it needs to be compatible with
    the new major version of Catalyst.

 Documentation:
  - The section of Catalyst::Upgrading describing how to upgrade to version 5.90
    of Catalyst has been much improved.

5.80032 2011-02-23 01:10:00

 Bug fixes:
  - Fix compatibility issue with code which was testing the value of
    $c->res->body multiple times. Previously this would cause the value
    to be built, and ergo cause the $c->res->has_body predicate to start
    returning true.
    Having a response body is indicated by $c->res->body being defined.

  - Fix bug with calling $upload->slurp multiple times in one request
    not working as expected as the file handle wasn't returned to
    the zero position. (Adam Sjøgren)

  - Fix some weird perl 5.8 situations where $c can get squashed unexpectedly
    in Catalyst::execute

  - Fix chained dispatch where chains were being compared for length (number
    of private parts in the chain) vs where they are being compared for
    PathPart length (i.e. number of non-capturing URI elements in your path).

    This bug meant that sometimes multiple Args or CaptureArgs (e.g. /*/*)
    type paths would be preferred to those with fixed path elements
    (e.g. /account/*)

 New features:
   - Add MYAPP_RESTARTER and CATALYST_RESTARTER environment variables to
     allow the restarter class to be chosen per application or generally.

     This feature was added to enable GUI restarters (such as the soon to
     be released CatalystX::Restarter::GTK to be enabled more easily by
     developers without changing their application code.

5.80031 2011-01-31 08:13:02

 Bug fixes:
  - Update dependency on MooseX::Role::WithOverloading to ensure that
    a version which can deal with / depends on a new Package::Stash
    is installed. (As if some other dependency is pulled in during upgrading
    which results in new Package::Stash, then it can leave you with a broken
    version of MooseX::Role::WithOverloading.

  - Fix undef warning in Catalyst::Engine::FastCGI when writing an empty
    body (e.g. doing a redirect)

5.89000 2011-01-24 09:28:45 (TRIAL release)

 This is a development release from psgi branch of Catalyst-Runtime.

 Removed features:

  - All of the Catalyst::Engine::* namespace is now gone. Instead we only have
    one Catalyst::Engine class speaking the PSGI protocol natively. Everything
    the various Catalyst::Engine:: classes did before is now supposed to happen
    through PSGI handlers such as Plack::Handler::FCGI,
    Plack::Handler::HTTP::Server::PSGI, Plack::Handler::Apache2, and so
    on. However, deployment can still work the same as it did before. The
    catalyst scripts still exist and continue to work.

    If you find anything that either doesn't work anymore as it did before or
    anything that could be done before with the various Catalyst::Engine::
    classes, but can't be done anymore with the single PSGI Catalyst::Engine
    class, please tell us *now*.

5.80030 2011-01-04 13:13:02

 New features:
  - Add a --proc_title option to the FCGI script to set the process
    title.
  - Allow the response body to be set to `undef' explicitly to indicate the
    absence of a body. It can be used to indicate that no body should be sent at
    all and processing of views should be skipped. This is especially useful for
    things like X-Sendfile, which now no longer require providing fake response
    bodies to suppress view processing. In order for this to work, you will also
    have upgrade Catalyst::Action::RenderView to at least version 0.15.

 Bug fixes:
  - Deal correctly with GLOB file handles in the response body (setting
    the Content-Length header appropriately)
  - Chained dispatch has been fixed to always prefer paths
    with the minimum number of captures (rather than the
    maximum number of actions). This means that (for example)
    a URI path /foo/* made out of 2 actions will take preference
    to a URI path /*/* made out of 3 actions. Please check your applications
    if you are using chained action and please write new test to report
    failing case.
  - Stop relying on bugs in the pure-perl version of Package::Stash. New
    versions of Package::Stash load Package::Stash::XS if
    available. Package::Stash::XS fixes some of the bugs of the pure-perl
    version, exposing our faulty assumption and breaking things. We now work
    with both old and new versions of Package::Stash, both with and without
    Package::Stash::XS being installed. Older versions of Catalyst-Runtime also
    work with both old and new versions of Package::Stash, but only if
    Package::Stash::XS is *not* installed.

 Documentation:
  - Clarify that when forwarding or detaching, the end action associated
    with the original dispatched action will be run afterwards (fallen)

5.80029 2010-10-03 16:39:00

 New features:
  - Add a warning when $c->view is called and cannot locate a default_view
    or current_view. This clarifies the logging when ::RenderView gets
    confused.

 Warning fixes:
  - Deal warning in with Moose >= 1.15 if you add a method called 'meta' to a
    class which already has one by using _add_meta_method.

5.80028 2010-09-28 20:49:00

 Bug fixes:
  - use Class::MOP in Catalyst::Utils.

  - Do not keep a reference to a closed over context in ctx_request, allowing
    the caller to dispose of the request context at their leisure.

  - Changes to be compatible with bleadperl

5.80027 2010-09-01 22:14:00

 Bug fixes:
  - Fix an issue with newly added test cases which depended on Catalyst::Action::RenderView

5.80026 2010-09-01 15:14:00

 Bug fixes:
  - Fix so that CATALYST_EXCEPTION_CLASS in MyApp is always respected by
    not loading Catalyst::Exception in Utils.pm BEGIN, because some Scripts::*
    load Utils before MyApp.pm

  - Fix warnings with new Moose versions about "excludes" during role
    application

  - Fix warning from MooseX::Getopt regarding duplicate "help" aliases.

  - parse_on_demand fixed when used in conjunction with debug mode.
    A regression was introduced in 5.80022 which would cause the body
    to always be parsed for logging at the end of the request when in
    debug mode. This has been fixed so that if the body has not been parsed
    by the time the request is logged, then the body is omitted.

  - Fix show_internal_actions config setting producing warnings in debug
    mode (RT#59738)

  - Make Catalyst::Test::local_request() set the response base from base href
    in the returned document so that links can be resolved correctly by
    Test::WWW::Mechanize::Catalyst

 Refactoring:
   - moved component name sort that happens in setup_components to
     locate_components to allow methods to wrap around locate_components

 Documentation:
    - Fix some typos

    - Advertise Catalyst::Plugin::SmartURI


5.80025 2010-07-29 01:50:00

 New features:
  - An 'action_class' method has been added to Catalyst::Controller to
    allow controller base classes, roles or traits
    (e.g. Catalyst::Controller::ActionRole) to more easily override
    the default action creation.

 Bug fixes:
  - Fix the --mech and --mechanize options to the myapp_create.pl script
    to operate correctly by fixing the options passed down into the script.
  - Fix controllers with no method attributes (where the action definitions
    are entirely contained in config). RT#58057
  - Fix running as a CGI under IIS at non-root locations.
  - Fix warning about "excludes" during role application
  - Fix warning from MooseX::Getopt regarding duplicate "help" aliases

 Documentation:
  - Fix missing - in the docs when describing the --mechanize option at one
    point.
  - Explained the common practice how to access the component's config
    values.
  - Fixed typo in Catalyst/Script/Server.pm (RT #58474)

5.80024 2010-05-15 11:55:44

  Bug fixes:
   - Revert the path resolution behaviour to how it used to work before
     Catalyst 5.80014_02, so that application paths are (by default)
     resolved from $ENV{PATH_INFO} and $ENV{SCRIPT_NAME}. This fixes backward
     compatibility breakage seen by a number of people since that release
     with mod_rewrite and SSI.

  New features:
   - Add a use_request_uri_for_path config setting to optionally
     use the (more correct) $ENV{REQUEST_URI} path resolution behaviour.

  Documentation:
   - Clarify the documentation for the Catalyst::Stats interface.
   - Copious documentation about the use_request_uri_for_path feature
     and the implications of setting this to true/false in
     Catalyst::Engine::CGI

5.80023 2010-05-07 23:50:27

  Bug fixes:
   - Ensure to always cleanup temporary uploaded files in all cases, even
     when exceptions occur during request processing, using HTTP::Body's
     ->cleanup feature. (RT#41442)
   - Ensure that Catalyst::Engine::HTTP's options hash is defined before
     dereferencing it. (RT#49267)
   - Fix regex special characters in REDIRECT_URL variable breaking
     the request base. (2nd part of RT#24951)
   - Fix not stripping backslashes in DispatchType::Regex::uri_for_action

  New features:
   - Setting __PACKAGE__->config(enable_catalyst_header => 1); in your MyApp.pm
     now enables the X-Catalyst header being printed when not in debug mode.
   - Require CGI::Simple::Cookie version 1.109 to ensure support for the
     HttpOnly flag
   - Allow the myapp_test.pl script to be given a list of paths which it
     will retrieve all of. (RT#53653)
   - Allow parameterized roles to be applied as plugins.
   - Allow requiring minimum versions of plugins when loading them.

  Documentation:
   - The Catalyst::Test::get method is documented as returning the raw
     response bytes without any character decoding (RT#53678)

  Cleanups:
   - Removal of $Catalyst::PRETTY_VERSION. Future releases will always have the
     full and unmangled version number, including trailing zeroes, in
     $Catalyst::VERSION.

5.80022 2010-03-28 19:43:01

  New features:
   - Log an extra line in debug mode with the response status code,
     the content type and content length if available.

  Refactoring / optimizations:
   - Display of the end of hit debug messages has been factored out into
     log_headers, log_request, log_request_headers, log_response,
     log_response_status_line and log_response_headers methods so that
     plugins which customise how much information is shown on the debug
     screen as easy to write.
   - Make all logging of request and response state get the information from
     $c->dump_these so that there is a unified point from which to hook
     in parameter filtering (for example).
   - $c->model/view/controller have become a lot faster for non-regexp names
     by using direct hash lookup instead of looping.
   - IP address => hostname mapping for the server is only done once and cached
     by Catalyst::Engine::HTTP to somewhat mitigate the problem of people
     developing on machines pointed at slow DNS servers.

  Bugs fixed:
    - DispatchType::Index's uri_for_action only returns for actions registered
      with it (prevents 'index :Path' or similar resolving to the wrong URI)
    - Make sure to construct Upload objects properly, even if there are
      multiple Content-Type headers (Closes RT#55976).

5.80021 2010-03-03 23:02:01

  Bug fixed:
   - $c->uri_for will now escape unsafe characters in captures
     ($c->request->captures) and correctly encode utf8 charracters.

5.80020 2010-02-04 06:51:18

  New features:
    - Allow components to specify additional components to be set up by
      overriding the expand_modules method. (Oliver Charles)

5.80019 2010-01-29 01:04:09

  Bug fixed:
   - Calls to $c->uri_for with private paths as strings (e.g.
     $c->uri_for('controller/action', 'arg1', 'arg2') ) no longer have
     / encoded to %2F. This is due to $c->uri_for('static', 'css/foo', $bar)
     which should not be encoded.
     Calls with an action object (rather than a string), or uri_for action
     will still encode / in args and captures to %2F

   - The above noted / => %2F encoding in uri_for_action or uri_for with
     an action object has been fixed to not just encode the first slash in
     any set of args/captures.

   - nginx and lighttpd FCGI requests with URI encoded sections as the first
     path part have been fixed to operate correctly.

   - A source of bogus warnings in Catalyst::Component::BUILDARGS has been
     removed.

  Documentation:
   - Improve the documentation about -Home and how Catalyst finds the home path
     for applications.
   - Various minor typo fixes.

  New features:
   - Allow passing additional arguments to action constructors.

5.80018 2010-01-12 22:24:20

  Bug fixed:
   - Call ->canonical on URI derived from $ENV{REQUEST_URI} to get
     paths correctly decoded. This bug was previously hidden by a bug
     in HTTP::Request::AsCGI.

  Documentation:
   - Clarify that uri_for_action works on private paths, with example.
   - Clarify documentation about debug

  Deprecations:
   - Saying use Catalyst::Test; (without an application name or () to stop
     the importer running is now deprecated and will issue a warning.
     You should be saying use Catalyst::Test ();

5.80017 2010-01-10 02:27:29

  Documentation:
   - Fix docs for ->forward method when passed a class name - this should
     be a component name (e.g. View::HTML, not a full class name, like
     MyApp::View::HTML).

  Bug fixes:
   - --daemon and -d options to Catalyst::Script::FastCGI are fixed.
   - Fix the debug dump for applications which use Catalyst::Plugin::Session
     (RT#52898)
   - Fix regression in the case where mod_rewrite is being used to rewrite
     requests into a path below your application base introduced with the
     %2F related fixes in 5.80014_02.
   - Do not crash on SIGHUP if Catalyst::Engine::HTTP->run is not passed the
     argv key in the options hash.
   - Correctly pass the arguments to Catalyst::Script::Server through to
     Catalyst::Engine::HTTP->run so that the server can restart itself
     with the correct options on SIGHUP.
   - Require new MooseX::MethodAttributes to be compatible with Moose
     versions >= 0.93_01
   - Require new MooseX::Role::WithOverloading to be compatible with Moose
     versions >= 0.93_01

  Cleanups:
    - Stop suppressing warnings from Class::C3::Adopt::NEXT now that most plugins
      have been updated to not use NEXT. If you get warnings then please upgrade
      your components or log a bug with the component author if an upgrade is
      not available. The Class::C3::Adopt::NEXT documentation contains information
      about how to suppress the warnings in your application if you need to.

5.80016 2009-12-11 23:23:33

  Bug fixes:

   - Fix slurping a file to work correctly with binary on Win32 in the
     encoding test controller.

  Bug fixes in the new scripts (for applications which have been upgraded):

   - Allow --restartdirectory as an option for the Server script, for
     backwards compatibility. (Dave Rolsky)
   - The --host option for the server script defaulted to localhost, rather
     than listening on all interfaces, which was the previous default. (Dave
     Rolsky)
   - Restore -p option for pid file in the FastCGI server script.
   - Fix the script environment variables MYAPP_PORT and MYAPP_RELOAD RT#52604
   - Fix aliasing applications under non-root paths with mod_rewrite in
     some apache versions where %ENV{SCRIPT_NAME} is set to the real name of
     the script, by using $ENV{REDIRECT_URL} which contains the non-rewritten
     URI.
   - Fix usage display when myapp_create.pl is run with no arguments. RT#52630

  New features:

   - The __MOP__ hash element is suppressed from being dumped fully
     (and instead stringified) when dumping the error screen to be
     less packed with information of no use.

  Documentation:

   - Fix Pod nits (RT#52370)

5.80015 2009-12-02 15:13:54
  Bug fixes:
   - Fix bug in Catalyst::Engine which would cause a request parsing to end
     prematurely in the hypothetical case where calling $engine->read returned
     the single character '0'.
   - Fix failing tests when combined with new HTTP::Request::AsCGI

  Documentation:
   - Improved documentation on read and read_chunk methods in Catalyst::Engine.
   - Fix reversal of SCRIPT_NAME and PATH_INFO in previously correct nginx
     FastCGI documentation introduced in _02.

5.80014_02 2009-12-01 00:55:23
  Bug fixes:
   - Fix reporting the wrong Content-Length if the response body is an
     upgraded string. Strings mean the same thing whether or not they are
     upgraded, may get upgraded even after they are encoded, and will
     produce the same output either way, but bytes::length returns too big
     values for upgraded strings containing characters >127
   - Fix t/live_fork.t with bleadperl (RT#52100)
   - Set $ENV{PATH_INFO} from $ENV{REQUEST_URI} combined with
     $ENV{SCRIPT_NAME} if possible. This is many web servers always fully
     decode PATH_INFO including URI reserved characters. This allows us to
     tell foo%2cbar from foo%252cbar, and fixes issues with %2F in paths
     being incorrectly decoded, resulting in too many path parts (rather
     than 1 path part containing a /, on some web servers (at least nginx).
     (RT#50082)
   - Require new HTTP::Request::AsCGI so that it fully decodes $ENV{PATH_INFO}
     in non CGI contexts. (RT#50082)

  Refactoring / cleanups:
   - NoTabs and Pod tests moved to t/author so that they're not run
     (and then skipped) normally.

  Documentation:
    - Fix Pod nits in Catalyst::Response (RT#51818)

5.80014_01 2009-11-22 20:01:23

  Bug fixes:
   - Filehandle now forced to binmode in CGI and FastCGI engines. This appears
     to correct some UTF-8 issues, but may break people's code which relies
     on the old behaviour.

  Refactoring / cleanups:
   - Plugins which inherit from Catalyst::Controller or Catalyst::Component
     are deprecated and now issue warnings.

5.80014 2009-11-21 02:51:14

   Bug fixes:
    - Require MooseX::MethodAttributes 0.17. This in turn requires new
      MooseX::Types to stop warnings in Moose 0.91, and correctly supports
      role combination of roles containing attributed methods.
    - Catalyst::Dispatcher::dispatch_types no longer throws deprecated warnings
      as there is no recommended alternative.
    - Improved the suggested fix warning when component resolution uses regex
      fallback for fully qualified component names.
    - Catalyst::Test::local_request sets ->request on the response.
    - Log flush moved to the end of setup so that roles and plugins which
      hook setup_finalize can log things and have them appear in application
      startup, rather than with the first hit.
    - Require a newer version of LWP to avoid failing tests.
    - Stop warnings when actions are forwarded to during dispatch.
    - Remove warnings for using Catalyst::Dispatcher->dispatch_types as this is a
      valid method to publicly call on the dispatcher.
    - Args ($c->request->args) and CaptureArgs ($c->request->captrues)
      passed to $c->uri_for with an action object ($c->action) will now
      correctly round-trip when args or captures contain / as it is now
      correctly uri encoded to %2F.

  Documentation:
    - Document no-args call to $c->uri_for.
    - Document all top level application configuration parameters.
    - Clarify how to fix actions in your application class (which is
      deprecated and causes warnings).
    - Pod fixes for ContextClosure.
    - Fix documentation for go/visit to reference captures and arguments
      in the correct order.
    - Update $c->forward and $c->state documentation to address scalar
      context.
    - Pod fix in Catalyst::Request (RT#51490)
    - Pod fixes to refer to ::Controller:: rather than ::C:: as the latter
      is deprecated (RT#51489)

  New features:
    - Added disable_component_resolution_regex_fallback config option to
      switch off (deprecated) regex fallback for component resolution.
    - Added an nginx-specific behavior to the FastCGI engine to allow
      proper PATH_INFO and SCRIPT_NAME processing for non-root applications
    - Enable Catalyst::Utils::home() to find home within Dist::Zilla built
      distributions
    - Added the Catalyst::Exception::Interface role defining the interface
      exception classes need to implement.
    - Added Catalyst::Exception::Basic as a basic implementation of
      Catalyst::Exception::Interface and made the existing exception classes
      use it.

  Refactoring / cleanups:
    - Remove documentation for the case_sensitive setting
    - Warning is now emitted at application startup if the case_sensitive
      setting is turned on. This setting is not used by anyone, not
      believed to be useful and adds unnecessary complexity to controllers
      and the dispatcher. If you are using this setting and have good reasons
      why it should stay then you need to be shouting, now.
    - Writing to $c->req->body now fails as doing this never makes sense.

5.80013 2009-09-17 11:07:04

   Bug fixes:
     - Preserve immutable_options when temporarily making a class mutable in
       Catalyst::ClassData as this is needed by new Class::MOP.
       This could have potentially caused issues when using the deprecated runtime
       plugins feature in an application with plugins which define their own new
       method.
     - Require new Moose version and new versions of various dependencies
       to avoid warnings from newest Moose release.
     - Fix go / visit expecting captures and arguments in reverse order.

  Documentation:
     - Rework the $c->go documentation to make it more clear.
     - Additional documentation in Catalyst::Upgrading covering more deprecation
       warnings.

  Refactoring / cleanups:
     - Action methods in the application class are deprecated and applications
       using them will now generate a warning at startup.
     - The -short option has been removed from catalyst.pl, stopping new
       applications from being generated using the ::[MVC]:: naming scheme as
       this is deprecated and generates warnings. RT#49771

5.80012 2009-09-09 19:09:09

  Bug fixes:
     - Fix t/optional_http-server.t test.
     - Fix t/optional_http-server-restart.t test.
     - Fix duplicate components being loaded at setup time, each component is
       now loaded at most once + tests.
     - Fix backward compatibility - hash key configured actions are stored in
       is returned to 'actions'.
     - Fix get_action_methods returning duplicate methods when a method is both
       decorated with method attributes and set as an action in config.

  Refactoring / cleanups:
     - Reduce minimum supported perl version from 5.8.6 to 5.8.4 as there are
       many people still running/testing this version with no known issues.

  Tests:
     - Make the optional_http_server.t test an author only test which must be
       run by authors to stop it being broken again.
     - Fix recursion warnings in the test suites.

5.80011 2009-08-23 13:48:15

  Bug fixes:
      - Remove leftovers of the restarter engine. The removed code caused test
        failures, which weren't apparent for anyone still having an old version
        installed in @INC.

5.80010 2009-08-21 23:32:15

  Bug fixes:
      - Fix and add tests for a regression introduced by 5.80008.
        Catalyst::Engine is now able to send out data from filehandles larger
        than the default chunksize of 64k again.

5.80009 2009-08-21 22:21:08

  Bug fixes:
      - Fix and add tests for generating inner packages inside the COMPONENT
        method, and those packages being correctly registered as components.
        This fixes Catalyst::Model::DBIC among others.

5.80008 2009-08-21 17:47:30

  Bug fixes:
       - Fix replace_constructor warning to actually work if you make your
         application class immutable without that option.
       - Depend on Module::Pluggable 3.9 to prevent a bug wherein components
         in inner packages might not be registered. This especially affected
         tests.
       - Catalyst::Engine::FastCGI - relax the check for versions of Microsoft
         IIS. Provides compatibility with Windows 2008 R2 as well as
         (hopefully) future versions.
       - In tests which depend on the values of environment variables,
         localise the environment, then delete only relevant environment
         variables (RT#48555)
       - Fix issue with Engine::HTTP not sending headers properly in some cases
         (RT#48623)
       - Make Catalyst::Engine write at least once when finalizing the response
         body from a filehandle, even if the write is empty. This avoids fail
         when trying to send out an empty response body from a filehandle.
       - Catalyst::Engine::HTTP - Accept a fully qualified absolute URI in the
         Request-URI of the Request-Line

  Refactoring / cleanups:
       - Deleted the Restarter engine and its Watcher code. Use the
         new Catalyst::Restarter in a recent Catalyst::Devel instead.
       - New unit test for Catalyst::Action 'unit_core_action.t'
       - Bump minimum supported perl version from 5.8.1 to 5.8.6 as there are
         known issues with 5.8.3.
       - Debug output uses dynamic column sizing to create more readable output
         when using a larger $ENV{COLUMNS} setting. (groditi)

  New features:
       - Added private_path method for Catalyst::Action
       - Allow uri_for($controller_instance) which will produce a URI
         for the controller namespace
       - Break setup_components into two more parts: locate_components and
         expand_component_module (rjbs)
       - Allow Components to return anon classed from their COMPONENT method
         correctly, and have action registration work on Controllers returned
         as such by adding a catalyst_component_name accessor for all components
         which returns the component instance's name to be used when building
         actions etc.
       - Adding X-Forwarded-Port to allow the frontend proxy to dictate the
         frontend port (jshirley)
       - Added Catalyst::Stats->created accessor for the time at the start of
         the request.

  Documentation:
       - Fix POD to refer to ->config(key => $val), rather than
         ->config->{key} = $val, as the latter form is deprecated.
       - Clearer docs for the 'uri_for' method.
       - Fix POD refering to CGI::Cookie. We're using CGI::Simple::Cookie.
         (Forrest Cahoon)

5.80007 2009-06-30 23:54:34

  Bug fixes:
       - Don't mangle query parameters passed to uri_for
         - Tests for this (Byron Young + Amir Sadoughi)
       - Inherited controller methods can now be specified in
         config->{action(s)}
       - Assigning an undef response body no longer produces warnings
       - Fix C3 incompatibility bug caused if you use Moose in MyApp.pm and
         add Catalyst to the right hand side of this in @ISA.
       - Make Catalyst.pm implement the Component::ApplicationAttribute
         interface so defining actions in MyApp.pm works again, if the
         actions have attributes that cause $self->_application to be used
         (like ActionClass).

  New features:
       - Add optional second argument to uri_with which appends to existing
         params rather than replacing them. (foo=1 becomes foo=1&foo=2 when
         uri_with({ foo => 2 }, { mode => 'append' }) is called on a foo=1
         URI.

5.80006 2009-06-29 23:37:47

  Bug fixes:
        - Revert change to URL encode things passed into $c->uri_for
          Args and CaptureArgs as this causes breakage to pre-existing
          applications.
        - Remove use of Test::MockObject as it doesn't install from CPAN
          in some environments.
        - Remove use of dclone to deep copy configs and replace with
          Catalyst::Utils::merge_hashes which has the same effect, of
          ensuring child classes don't inherit their parent's config,
          except works correctly with closures.
        - Add Class::C3::reinitialize into Catalyst::Test to avoid weird
          bugs in ctx_request (bokutin in RT#46459)
        - Fix issues with _parse_PathPrefix_attr method in Catalyst::Controller
          (jasonk in RT#42816)
        - Fix bugs with action sorting:
          - Path actions sorted so that the most specific wins.
          - Action methods named default and index fixed.

  New features:
        - Use ~ as prefix for plugins or action classes which are located in
          MyApp::Plugin / MyApp::Action (mo)
        - Controller methods without attributes are now considered actions if
          they are specified in config->{action(s)} (mo)
        - Add Catalyst::Component::ContextClosure as an easy way to create code
          references, that close over the context, without creating leaks.

  Refactoring / cleanups:
        - Clean namespaces in Catalyst::Exception*.
        - Turn Catalyst::Exception into an actual class and make the throw
          method create instances of it. They can still be used as normal
          strings, as before, as they are overloaded to stringify to their
          error message.
        - Add a rethrow method to Catalyst::Exception.
        - Add Catalyst::Exception::Detach and ::Go, and refactor detach() and
          go() to use them instead of magic, global strings.
          Fixes RT#47366
        - Clean up getting metaclass instance and making app class immutable
          again in Catalyst::Test

5.80005 2009-06-06 14:40:00

  Behaviour changes:
        - Arguments ($c->req->args) in Chained dispatch are now automatically
          URL decoded to be consistent with Local/Path dispatch

  Documentation:
        - Clarify correct techniques for Moose controllers (domm)

  Bug fixes:
        - Further change pushing 'env' attribute down into Catalyst::Engine
          to make $c->engine->env work in all cases (kmx)
        - Also fix $c->engine->env in Catalyst::Test tests (kmx)
          - Tests for this
        - Fix Catalyst failing to start if any plugin changed $_ whilst
          loading
          - Tests for this
        - Be stricter about arguments to Args attributes for Chained actions,
          so that they blow up on load instead of causing undefined behavior
          later on
          - Tests for this
        - Prefer Path actions with a smaller (or set) number of Args (caelum)
          Bug reported here: http://stackoverflow.com/questions/931653/catalyst-action-that-matches-a-single-file-in-the-root-directory/933181#933181
          - Tests for this

   New features:
        - Add $c->req->remote_user to disambiguate from $c->req->user (dwc)
        - Require MooseX::MethodAttributes 0.12 so that action methods
          (with attributes) can be used in / composed from Moose roles.
        - Allow the generation of cookies with the HTTPOnly flag set
          in Catalyst::Engine (kmx)

5.80004 2009-05-18 17:03:23
        - Rename the actions attribute in Catalyt::Controller to
          _controller_actions to avoid name clashes with application
          controller naming. (random)
        - Test for using Moose in components which have a non-Moose base class
          Fixed by 349cda in Moose 0.78
        - Fix deprecation message for Catalyst::Dispatcher to refer
          to the class actually calling the deprecated method. RT#45741
        - Clarify limitations of $request->base and $request->secure.
          (Phil Mitchell)
        - Add 'use Catalyst' to documentation for a Moose MyApp class as
          noted by dmaki.
        - Fix so that / (and other special characters) are URL encoded when
          passed into $c->uri_for as Args/CaptureArgs
        - Fix development server so that $c->engine->env returns the correct
          environment
        - Require Moose 0.78 to fix metaclass incompatibility issues
        - Require MooseX::MethodAttributes 0.10 and use
          Moose::Meta::Class->initialize rather than Moose->init_meta to fix
          bugs related to having a 'meta' method in your controller
        - Fix cases where your application failing to compile could cause perl
          to report 'Unknown Error'
        - Support adding Moose::Roles to the plugin list. These are applied to
          MyApp after plugins have been pushed onto @ISA
        - Fix calling $c->req->parameters as the first thing you do when
          parse_on_demand is on

5.80003 2009-04-29 16:23:53
        - Various POD tweaks. (hdp, dandv)
        - Fix formatting error in the regex fallback warning.
        - Convert the dispatcher's and restarter engine's BUILD method to
          attribute builders to not override the BUILD method from
          MooseX::Emulate::Class::Accessor::Fast.
        - Fix classes without metaclasses restarting, when not using
          B::Hooks::OP::Check::StashChange
        - Fix the unattached chain debug table for endpoints with no
          parents at all.
        - Turn off test aggregation by default. Only aggregate if the
          AGGREGATE_TESTS environment variable is set and a recent
          Test::Aggregate is available.
        - Bump to MooseX::MethodAttributes 0.09, to gain the
          get_nearest_methods_with_attributes method allowing methods without
          attributes in a subclass to override those with attributes in a
          superclass. This fixes CatalystX::CRUD's method of overriding /
          disabling functionality from base controllers.
        - Bump HTTP::Request::AsCGI dependency to avoid broken version
        - Bump Moose dependency to latest version to fix metaclass
          incompatibility issues in some cases.
        - Additional tests for setup_stats method.
        - Fix log levels in Catalyst::Log to be properly additive.
        - Fix RT#43375 by sorting results before testing them
        - Fixes for uri_for_action when using Catalyst::DispatchType::Regex
          + tests from RT#39369 (norbi)
        - Partial rewrite and reoganisation of the C3 docs in
          Catalyst::Upgrading based on feedback from kiffin
        - If you make your application class immutable and turn off
          constructor inlining, Catalyst will die and tell you pass
          the (replace_constructor => 1) argument to
          make_immutable. (Dave Rolsky)

5.80002 2009-04-22 01:28:36
        - Fix CATALYST_DEBUG and MYAPP_DEBUG environment variables
          turning debuging on if defined, rather than if set.
          They now force debugging on or off, taking precedence over
          configuration in your application.
          - Tests for this
        - pass replace_constructor to the immutable call to ensure
          applications get a Moose constructor rather than a C::A one
        - Fix issues with restarting the application class due to C3 failures
          on perl 5.10
        - Work around issues in Moose with initialization order of multiple
          levels of non-Moose classes inheriting from a Moose class
          - Test for this
        - Add backwards compatibility method for Catalyst::Log->body, which
          has been made private
        - Fix so that calling $c->req->parameters(undef) does not flatten
          the request parameters with undef + test
        - Fix so that width of table of unattached actions for debugging
          ::DispatchType::Chained varies according to your terminal width
          (Oleg Kostyuk)
        - Fix warning message about linearized @ISA in Catalyst::Component
          (Emanuele Zeppieri)
        - Require MX::MethodAttributes 0.06 to avoid issues with saying
          use base 'Catalyst::Controller'; use Moose; losing actions
        - Fix all of's typos in ::Upgrading and ::Delta (hobbs)

5.80001 2009-04-18 22:18
        - Don't inline the constructor for Catalyst::Log to avoid a
          warning on recent Moose versions.
        - Add delta documentation
        - Clean up recursion errors
        - Extra cross links in dispatch types POD (Ian Wells)
        - Test uri_with clears query params when they are set to undef
          (Ian Wells)
        - Complain about old Catalyst::Devel versions which generated
          ->setup(qw/-Debug... etc. as this is not recommended

5.8000_07 2009-04-12 13:37
        - Add the Catalyst::Dispatcher->dispatch_type method (ash)
        - Throw an exception rather than loading an app if an action
          tries to chain to itself
          - Tests for this
        - Change the $c->visit and $c->go methods to optionally take
          CaptureArgs, making them useful to call ActionChains with
          - Tests for this (radek)
        - Fix _invoke_as_component method to find the proper action instance
          for dispatchable actions so that ->visit or ->going to ActionChains
          with qw/Class::Name method_name/ works correctly
          - Tests for this (radek)
        - Added Catalyst::Test::ctx_request to be able to inspect
          the context object after a request is made (Jos Boumans)
        - debug() POD rewrite (jhannah)
        - Change the warning when you have conflicting components to
          present a list
        - Move NEXT use and testing deprecated features out to its own
          test application so that the main TestApp isn't polluted with
          spurious warnings
        - Add a warning for the old ::[MVC]:: style naming scheme
          - Test for this
        - Kill Class::C3::Adopt::NEXT warnings for the Catalyst:: namespace
          in production versions
        - Tidy up Catalyst::ClassData to ensure that all components get
          the correct metaclass
        - Make MyApp.pm restartable by unsetting setup_finished in
          the restarter process
        - Non-naive implementation of making mutable on restart using
          B::Hooks::OP::Check::StashChange if installed
          - Tests for this
        - Naive implementation of making all components mutable in the
          forked restart watcher process so native Moose apps using
          immutable restart correctly.
          - Tests for this
        - Bump Moose dependency to 0.70 so that we avoid nasty surprises
          with is_class_loaded and perl 5.80 when you Moosify MyApp.pm
        - Clarify that request arguments aren't unescaped automatically
          (Simon Bertrang) (Closes RT#41153)
        - Don't require C3 for the MRO test
        - Bump MX::Emulate::CAF prereq to support list assignment
        - Remove useless column in chained action debug table.
        - namespace::clean related cleanups
        - Import related cleanups and consistency fixes
        - Fix test suite TestApp /dump/env action
        - Add $res->code as alias for $res->status
        - Make Catalyst::ClassData compatible with the latest Class::MOP::Class
          changes. Also depend on the latest Class::MOP.
        - Add $c->uri_for_action method.
        - Don't stringify the meta method. Use its name instead.
        - Use MooseX::MethodAttributes::Inheritable to contain action
          attributes. This means that attributes are now represented in the MOP,
          allowing method modifiers on actions to work as expected.
        - Provide a reasonable API in Catalyst::Controller for working with
          and registering actions, allowing a controller sub-class to replace
          subroutine attributes for action declerations with an alternate
          syntax.
        - Instantiate correct sub-class of Moose::Meta::Class for non-Moose
          components where Catalyst forces the creation of a metaclass instance.
          This is more correct, and avoids metaclass incompatibility in complex
          cases
          - Tests for this
        - Use of deprecated Catalyst::Base now warns.
        - Add uri_with tests

5.8000_06 2009-02-04 21:00
        - Disallow writing to config after setup
        - Disallow calling setup more than once
        - Documentation fix regarding overloading of Engine and Dispatcher
          instances
        - Several documentation typo fixes
        - Stop Makefile.PL from warning about versions that fixed a conflict
        - Improved upgrading documentation
        - Seed the RNG in each FastCGI child process (Andrew Rodland)
        - Properly report dynamic bind port for the development server
          (Closes RT#38544)
        - Use the way documented by IO::Socket::INET to get the error message
          after trying to create a listening socket (Closes RT#41828)
        - Don't ignore SIGCHLD while handling requests with the dev server
          (Closes RT#42962)

5.8000_05 2008-29-01 00:00
        - Text::SimpleTable's go as wide as $ENV{COLUMNS} (jhannah)
          Patch written by Oleg Kostyuk <cub.uanic@gmail.com>
        - Improve docs for visit (mateu)
        - Add docs for finalize hook (dhoss)
        - Added ru/ua translations to error page
        - Improve the clarity and verbosity of the warning when component
          resolution uses regex fallback. (jhannah)
        - Handle leading CRLF in HTTP requests sometimes sent by IE6 in
          keep-alive requests.
        - Fixes for FastCGI with IIS 6.0 (janus)
        - Passing request method exported by Catalyst::Test an extra
          parameter used to be ignored, but started breaking if the parameter
          was not a hash in 5.8000_04. Extra parameter is now ignored if
          it isn't a hashref
        - Fix request argumentss getting corrupted if you override the
          dispatcher and call an action which detaches (for
          Catalyst::Plugin::Authorization::ACL)
        - Fix calling use Catalyst::Test 'MyApp' 'foo' which used to work,
          but stopped as the 2nd parameter can be an options hash now
        - Bump Moose dependency to fix make_immutable bug
        - Use compile time extends in Catalyst::Controller
        - Make Catalyst::Request::uploads attribute non-lazy, to fix
          test for Catalyst-Engine-Apache
        - Bump version of MooseX::Emulate::Class::Accessor::Fast
        - Stop using MooseX::Adopt::Class::Accessor::Fast by default, to stop
          breaking other packages which use Class::Accessor::Fast
        - Remove unused action_container_class attribute from
          Catalyst::Dispatcher
        - Replace {_body} instance access with calls to _body accessors
        - Add backwards compatibility alias methods for private attributes on
          Catalyst::Dispatcher which used to be public. Needed by
          Catalyst::Plugin::Server and  Catalyst::Plugin::Authorization::ACL
        - Fix return value of $c->req->body, which delegates to the body
          method on the requests HTTP::Body instance
          - Test for this
        - Fix calling $c->req->body from inside an overridden prepare_action
          method in a plugin, as used by Catalyst::Plugin::Server
          - Test for this
        - Fix assignment to Catalyst::Dispatcher's preload_dispatch_types and
          postload_dispatch_types attributes - assigning a list should later
          return a listref. Fixes Catalyst::Plugin::Server.
          - Tests for this
        - Change streaming test to serve itself rather than 01use.t, making
          test sync for engines easier
        - Refactor capturing of $app from Catalyst::Controller into
          Catalyst::Component::ApplicationAttribute for easier reuse in other
          components
        - Make the test suites YAML dependency optional
        - Make debug output show class name for the engine and dispatcher
          rather than the stringified ref.
        - Make MyApp immutable at the end of the scope after the setup
          method is called, fixing issues with plugins which have their
          own new methods by inlining a constructor on MyApp
          - Test for this and method modifiers in MyApp
        - Fix bug causing Catalyst::Request::Upload's basename method
          to return undef
          - Test for this (Carl Franks)
        - Fix loading of classes which do not define any symbols to not
          die, as it didn't in 5.70
          - Test for this
        - Bump MooseX::Emulate::Class::Accessor::Fast dependency
          to force new version which fixes a lot of plugins
        - Make log levels additive, and add documentation and tests
          for the setup_log method, which previously had none.
          Sewn together by from two patches provided by David E. Wheeler
        - Switch an around 'new' in Catalyst::Controller to a BUILDARGS
          method as it's much neater and more obvious what is going on
        - Add a clearer method on request and response _context
          attributes, and use if from ::Engine rather than deleting
          the key from the instance hash
        - Use handles on tree attribute of Catalyst::Stats to replace
          trivial delegation methods
        - Change the following direct hash accesses into attributes:
          Catalyst::Engine: _prepared_write
          Catalyst::Engine::CGI: _header_buf
          Catalyst::Engine::HTTP: options, _keepalive, _write_error
          Catalyst::Request: _path
          Catalyst::Stats: tree
        - Fix issues in Catalyst::Controller::WrapCGI
          and any other components which import (or define) their
          own meta method by always explicitly calling
          Class::MOP::Object->meta inside Catalyst
          - Add test for this
        - Add test case for the bug which is causing the
          Catalyst::Plugin::Authentication tests to fail
        - Fix a bug in uri_for which could cause it to generate paths
          with multiple slashes in them.
          - Add test for this
        - Fix SKIP block name in t/optional_http-server-restart.t,
          stopping 'Label not found for "last SKIP"' error from
          Test::More
        - Workaround max_redirect 0 bug in LWP
        - Move live_engine_response_print into aggregate
        - Fix dependency bug, s/parent/base/ in new test
        - Fix optional tests to run the live tests in the aggregate
          dir
        - Fix Catalyst->go error in remote tests
        - Fix upload test to work with remote servers, don't check for
          deleted files
        - Fix engine_request_uri tests to work on remote server with
          different URI

5.8000_04  2008-12-05 12:15:00
        - Silence Class::C3::Adopt::NEXT warnings in the test suite
        - Fix loads of 'used once, possible typo' warnings
        - Additional tests to ensure upload temp files are deleted
        - Remove use of NEXT from the test suite, except for one case
          which tests if Class::C3::Adopt::NEXT is working
        - Use a predicate to avoid recursion in cases where the uri
          method is overridden by a plugin, and calls the base method,
          for example Catalyst::Plugin::SmartURI
          - Test for this (caelum)
        - Compose the MooseX::Emulate::Class::Accessor::Fast role to
          Catalyst::Action, Catalyst::Request, and all other modules which
          inherit from Class::Accessor::Fast in 5.70.
          This fixes:
            - Catalyst::Controller::HTML::FormFu (zamolxes)
            - Catalyst::Request::REST
          - Test for this
        - Make hostname resolution lazy (Marc Mims)
        - Support mocking virtualhosts in test suite (Jason Gottshall)
        - Add README
        - Fix TODO list
        - Use Class::C3::Adopt::NEXT
        - Ignore C3 warnings on 5.10 when testing ensure_class_loaded
        - Add TODO test for chained bug (gbjk)
        - Fix list address in documentation (zarquon)
        - Fix ACCEPT_CONTEXT on MyApp, called as a class method
           - Test for this
        - Bump MooseX::Emulate::Class::Accessor::Fast version requirement to
          get more back compatibility
        - Improve documentation for $req->captures (caelum)
        - Fix a bug in Catalyst::Stats, stopping garbage being inserted into
          the stats if a user calls begin => but no end => (jhannah)
           - Test for this (jhannah)
        - Trim lines sooner in stats to avoid ugly Text::SimpleTable wrapping
          (jhannah)
        - Change Catalyst::ClassData to tweak the symbol table inline for
          performance after profiling
        - Fix POD typo in finalize_error (jhannah)
        - Add tests to ensure that we delete the temp files created by
          HTTP::Body's OctetStream parser

5.8000_03 2008-10-14 14:13:00
        - Fix forwarding to Catalyst::Action objects.
        - Fix links to the mailing lists (RT #39754 and Florian Ragwitz).
        - Use Class::MOP instead of Class::Inspector.
        - Change Catalyst::Test to use Sub::Exporter.
        - Fixed typo in Engine::HTTP::Restarter::Watcher causing -r to complain.

5.8000_02 2008-10-14 07:59:00
       - Fix manifest

5.8000_01 2008-10-13 22:52:00
        - Port to Moose
        - Added test for action stringify
        - Added test for component instances getting $self->{value} from config.
        - Add Catalyst::Response->print() method
        - Optionally aggregate tests using Test::Aggregate.
        - Additional docs for uri_for to mention how to use $c->action and
          $c->req->captures (jhannah)
        - List unattached chained actions in Debug mode.
        - Pod formatting fix for Engine::FastCGI (Oleg Kostyuk).
        - Add visit, a returning ->go

5.7XXXXXX XXXX
        - Workaround change in LWP that broke a cookie test (RT #40037)
        - Back out go() since that feature's been pushed to 5.80
        - Fix some Win32 test failures
        - Add pt translation of error message (wreis)
        - Make :Chained('../action') work
        - Add test actions
        - Chained doc improvements (rev 8326-8328)

5.7099_03 2008-07-20 10:10:00
        - Fix regressions for regexp fallback in model(), view() and controller()
        - Added the supplied argument to the regexp fallback warning for easier
          debugging
        - Ensure ACCEPT_CONTEXT is called for results from component()

5.7099_02 2008-07-16 19:10:00
        - Added PathPrefix attribute
        - Removed Catalyst::Build; we've long since moved to Module::Install
        - Updated Catalyst::Test docs to mention the use of HTTP::Request
          objects

5.7099_01 2008-06-25 22:36:00
        - Refactored component resolution (component(), models(), model(), et al). We now
          throw warnings for two reasons:
          1) model() or view() was called with no arguments, and two results are returned
             -- set default_(model|view), current_(model|view) or current_(model|view)_instance
             instead
          2) you call a component resolution method with a string, and it resorts to a regexp
             fallback wherein a result is returned -- if you really want to search, call the
             method with a regex as the argument
        - remove 0-length query string components so warnings aren't thrown (RT #36428)
        - Update HTTP::Body dep so that the uploadtmp config value will work (RT #22540)
        - Fix for LocalRegex when used in the Root controller
        - Get some of the optional_* tests working from dirs with spaces (RT #26455)
        - Fix Catalyst::Utils::home() when application .pm is in the current dir (RT #34437)
        - Added the ability to remove parameters in req->uri_with() by passing in
          an undef value (RT #34782)
        - Added $c->go, to do an internal redispatch to another action, while retaining the
          contents of the stash

5.7014  2008-05-25 15:26:00
        - Addition of .conf in restart regex in Catalyst::Engine::HTTP::Restarter::Watcher
        - Fix regression for relative uri_for arguments after a forward()
          introduced in 5.7013 (Peter Karman)
        - Fix regression for "sub foo : Path {}" in the root controller which
          was introduced when attempting to allow "0" as a Path.

5.7013  2008-05-16 18:20:00
        - Provide backwards compatability methods in Catalyst::Stats
        - Fix subdirs for scripts that run in subdirs more than one level deep.
        - Added test and updated docs for handling the Authorization header
          under mod_fastcgi/mod_cgi.
        - Fixed bug in HTTP engine where the connection was not closed properly if the
          client disconnected before sending any headers. (Ton Voon)
        - POD fix, IO::FileHandle => IO::Handle (RT #35690)
        - Fix grammar on welcome page (RT #33236)
        - Fix for Path('0') handling (RT #29334)
        - Workaround for Win32 and c3_mro.t (RT #26452, tested by Kenichi Ishigaki)
        - Fix for encoding query parameters
        - Fix Chained multiple test

5.7012  2007-12-16 23:44:00
        - Fix uri_for()'s and uri_with()'s handling of multibyte chars
          (Daisuke Murase)
        - Fix __PACKAGE__->config->{foo} = 'bar' case with subclassing
        - Add Catalyst::Stats (Jon Schutz)
        - Fixed a bug where ?q=bar=baz is decoded as q=>'bar', not 'bar=baz'.
          (Tatsuhiko Miyagawa, Masahiro Nagano)
        - Fixed a bug where -rr (restart regex) command line option could cause
          shell errors. (Aristotle Pagaltzis, Chisel Wright)

5.7011  2007-10-18 20:40:00
        - Allow multiple restart directories and added option to follow
          symlinks in the HTTP::Restarter engine (Sebastian Willert)
        - Fixed t/optional_http-server-restart.t so it actually tests
          if the server restarted or notified of an error (Sebastian Willert)
        - Return child PID from the HTTP engine when run with the 'background' option.
          (Emanuele Zeppieri)
        - Fixed bug in HTTP engine where writes could fail with
          'Resource temporarily unavailable'.
        - Fixed bug where %2b in query parameter is doubly decoded to ' ', instead of '+'
          (RT #30087, Gavin Henry, Tatsuhiko Miyagawa, Oleg Pronin)
        - Fixed bug where req->base and req->uri would include a port number when running
          in SSL mode.
        - Removed unnecessary sprintf in debug mode that caused warnings on locales where
          commas are used for decimal markers.
        - Improved error message for case when server picks up editor save
          files as module names. (James Mastros)

5.7010  2007-08-22 07:41:00
        - Resource forks in 5.7009

5.7009  2007-08-22 00:14:00
        - Moved Manual.pod to Manual.pm and clarified status of
          Catalyst-Manual dist
        - Doc patches to Catalyst::Controller
        - remove ignore_loaded from plugin load, commenting why
        - document the ignore_loaded feature in Catalyst::Utils
        - Add testing of inline plugins.

5.7008  2007-08-13 08:40:00
        - Added $c->request->query_keywords for getting the keywords
          (a query string with no parameters).
        - Add undef warning for uri_for.
        - Fix bug where a nested component would be setup twice.
        - Make ensure_class_loaded behave better with malformed class name.
        - Make _register_plugin use ensure_class_loaded.
        - Remove 'Argument "??" isn't numeric in sprintf' warning.
          (Emanuele Zeppieri)
        - Fixed a bug where Content-Length could be set to 0 if a filehandle
          object in $c->response->body did not report a size.
        - Fixed issue where development server running in fork mode did not
          properly exit after a write error.
          (http://rt.cpan.org/Ticket/Display.html?id=27135)
        - Remove warning for captures that are undef.
        - Fixed $c->read and parse_on_demand mode.
        - Fixed a bug with the HTTP engine where very large response bodies
          would not be sent properly.

5.7007  2007-03-13 14:18:00
        - Many performance improvements by not using URI.pm:
          * $c->uri_for (approx. 8x faster)
          * $c->engine->prepare_path (approx. 27x faster)
          * $c->engine->prepare_query_parameters (approx. 5x faster)
        - Updated HTTP::Body dependency to 0.9 which fixes the following issues:
          * Handle when IE sometimes sends an extra CRLF after the POST body.
          * Empty fields in multipart/form-data POSTs are no longer ignored.
          * Uploaded files with the name "0" are no longer ignored.
        - Sending SIGHUP to the dev server will now cause it to restart.
        - Allow "0" for a path in uri_for.
        - Performance and stability improvements to the built-in HTTP server.
        - Don't ignore file uploads if form contains a text field with the same name.
          (Carl Franks)
        - Support restart_delay of 0 (for use in the POE engine).
        - Skip body processing if we don't have a Content-Length header.
          Results in about a 9% performance increase when handling GET/HEAD
          requests.
        - Add a default body to redirect responses.
        - MyApp->model/view now looks at MyApp->config->{default_view/model}
          (Bogdan Lucaciu)

5.7006   2006-11-15 14.18
        - Updated manifest
        - Fix Slurp dependency
        - Updated HTTP::Body dependency to 0.6, 0.5 can break on large POST
          requests.
        - Skip utf8 fix for undef values in uri_with() and uri_for()

5.7005   2006-11-07 19:37:35
        - Fixed lighttpd tests to be properly skipped.
        - Moved IE workarounds to exist only in the HTTP engine.
        - Added installation instructions (from Catalyst-Manual dist)

5.7004   2006-11-06 20:48:35
        - Fix Engine::HTTP crash when using IE. (Jesper Krogh, Peter Edwards)
        - clean up Catalyst::Utils to handle some edge cases
        - Properly work around lighttpd PATH_INFO vs. SCRIPT_NAME bug
          (Mark Blythe)
        - add _application accessor to Catalyst::Base
        - Support current_view
        - Allow use of Catalyst::Test without app name (Ton Voon, Altinity)
        - Catalyst::Manual moved to its own package
        - Add option to FastCGI engine to send errors to stdout, not the web server
        - Use Module::Install's auto_install to install prerequisite modules
        - various documentation fixes and improvements

5.7003   2006-09-21 16:29:45
        - Additions and updates to tutorial

5.7002   2006-09-17 19:35:32
        - unescape captures to match args
        - fix for relative Chained under namespace '' (root)
        - fix for hashrefs in action attributes from config
        - fix for Chained to require correct number of CaptureArgs

5.7001   2006-07-19 23:46:54
        - fix for component loading
        - uri_for and uri_with now behave as they used to with non-
          array references

5.7000   2006-07-07 08:08:08
        - fix FCGI.pm warning message with FastCGI engine
        - bumped inc::Module::Install to 0.63 in Makefile.PL
        - fixes to uri_for_action for DispatchType::Chained
        - Further doc work.
        - Minor code cleanups
        - Changed catalyst.pl to depend on Catalyst::Devel

5.70_03  2006-06-28 16:42:00
        - fixup to registered plugins debug at app startup
        - refactored Catalyst::Utils::home

5.70_02  2006-06-27 11:51:00
        - Updated tutorial.

5.70_01  2006-06-26 10:49:00

        - fixed a Catalyst::Base bug causing duplicate action registrations
        - modified DispatchTypes to support multiple registrations
        - added Catalyst::Runtime module as dist marker
        - added Catalyst::ActionChain and Chained DispatchType
        - removed retarded registration requirement in dispatcher
        - removed Module::Pluggable::Fast hack in favor of
          Module::Pluggable::Object
        - extended uri_for, added dispatcher->uri_for_action
        - added Catalyst::Base->action_for('methodname')
        - checked and tested :Args multimethod dispatch
        - added ability to set action attributes from controller config
        - added merge_config_hashes() as a convenience method
        - Swapped out CGI::Cookie in favour of CGI::Simple::Cookie
        - Removed test dependencies on Test::NoWarnings, Test::MockObject
        - Removed dependency on UNIVERSAL::require
        - Split out Catalyst::Helper into a new distribution
        - un-bundled the plugins as they are now pre-reqs for Catalyst::Helper
        - nuked each() out of core with prejudice (due to lurking buglets)
        - Added tests from phaylon for dispatcher precedence
        - Use Class::Inspector->loaded($class) instead of $class->can('can')
        - Added ActionClass attribute
        - Removed Test::WWW::Mechanize::Catalyst from Makefile.PL (circular dep)
        - Updated docs for Catalyst::Component
        - Separated execute and dispatch on Catalyst::Action
        - cleaned up logging and debug output
        - significant documentation revisions
        - Added warning for setup being called twice
        - Fix pod to use DBIC::Schema instead of DBIC model
        - Fix ->config failing to copy _config for subclassing
        - Updated log format
        - Updated debug dump

5.6902  2006-05-04 13:00:00
        - Remove tarballs and OSX metadata files.

5.6901  2006-05-03 11.17:00
        - Module::Install didn't overwrite META.yml.

5.6900  2006-05-03 11.17:00
        - Stupid pause indexer can't count.
        - Better fix for Catalyst::Test
        - more tests.

5.682   2006-04-27 13:51:00
        - Damn OSX attributes again :(

5.681   2006-04-27 08:47:00
        - Updated manifest.
        - Add basename to core . (Deprecates Catalyst::Plugin::Basename)

5.68    2006-04-26 12:23:00
        - ConfigLoader: Updated to version 0.06
        - fixed undef warnings in uri_for() and uri_with()
        - Fixed Catalyst::Test to report errors on failed Class load

5.678   2006-04-24 12:30:00
        - Re-release of 5.67 without OSX metadata files.

5.67    2006-04-23 08:50:00
        - Added $c->req->uri_with() helper
        - ConfigLoader: Updated to version 0.05
        - Fix up Engine to avoid a new 5.8.8 warning
        - Added app name with :: support for PAR
        - Added $c->models/views/controllers
        - Static::Simple: Unescape the URI path before looking for the file.
          This fixes issues with files that have spaces.
        - Looping and recursion tests plus a fix
        - Added lots of API documentation. Refactored main pod.
        - Changed default behaviors for $c->model/$c->controller/$c->view
          to more sane settings.
        - added the clear_errors method - an alias for error(0)
        - Added tmpdir option for uploads (woremacx)
        - Applied patch from GEOFFR to allow normal filehandles.
        - Refactored Dispatcher internals for better readability and speedup
          (stress tests run 12% faster)
        - Allow $c->error to run as a class method

5.66    2006-03-10 17:48:00
        - Added Test::WWW::Mechanize::Catalyst support
        - Cleaned generated tests
        - Added Root controller concept
        - Updated ConfigLoader plugin to version 0.04

5.65    2006-02-21 10:34:00
        - Added plugin introspection.
        - Support optional hashref as last param for parameters in uri_for.
        - Updated tutorial to be more complete.
        - Applied args patch from antirice (Fixes Ticket #67)

5.64    2006-02-07 20:29:00
        - Fixed bug in FastCGI proc manager mode where pm_post_dispatch
          was not run. (Eric Wong)
        - Cleaned up generated tests
        - Updated YAML support to use ConfigLoader
        - Fixed path dispatch to canonicalise correctly
            (see http://dev.catalyst.perl.org/ticket/62)
        - Added Catalyst::Manual::About

5.63    2006-01-22 00:00:00
        - Updated prereq versions

5.62    2006-01-17 16:30:00
        - Large update to the tutorial (castaway)
        - Added YAML config support
        - Added COMPONENT() and ACCEPT_CONTEXT() support
        - Action list in debug mode is now displayed as a tree in the
          correct execution order.
        - Fixed engine detection to allow custom mod_perl engines.
        - Static::Simple: Fixed bug in ignore_dirs under win32.
        - Display version numbers of loaded plugins. (Curtis Poe)
        - Added class and method for caught exception messages.
        - Updated PAR support to use "make catalyst_par",
          packages are no longer written by Makefile.PL.
        - Automatically determine Content-Length when serving a
          filehandle.
        - Exceptions now return status 500.
        - Updated for Module::Install 0.44.
        - Fixed additional file installation for multi level app names.
        - Added REDIRECT_URL support for applications running behind
          a RewriteRule in Apache. (Carl Franks)
        - Fixed FastCGI engine under win32. (Carl Franks)
        - FastCGI doc updates (Bill Moseley)
        - Bugfix for $c->model and friends (defined).

5.61    2005-12-02 00:00:00
        - Fixed ExtUtils::AutoInstall Bootstrap Code in Makefile.PL

5.60    2005-12-01 22:15:00
        - Fixed Path and index actions in the appclass,
          including those that attach to /
        - Index is now weighted higher than Path
        - Fixed restarter and -d debug switch in server.pl.
        - Added a warning if you attempt to retrieve a parameter
          using $c->req->params('foo').
        - Fixed the Module::Install::Catalyst @ISA bug

5.59    2005-11-30 13:25:00
        - Fixed shebang line for generated scripts
        - Fixed forward to classes ($c->forward(qw/MyApp foo/))
        - Wrap use block in begin to quelch C:C3 warnings
        - Removed scrollbar from debug output
        - Fixed catalyst_par_core() and catalyst_par_multiarch()

5.58    2005-11-24 10:51:00
        - Added ExtUtils::AutoInstall support
        - Allow overriding path in Catalyst::Helper.
        - Added -makefile to catalyst.pl to generate a new Makefile.PL.
        - Restored Catalyst::Build with a deprecation notice.
        - Improved PAR support
        - Replaced -short with auto-detection
        - Fixed prereqs, added File::Copy::Recursive
        - Static::Simple changes:
            - Made prepare_action play nice with other plugins by not short-
              circuiting.
            - Added tmpl to the ignored extensions.
            - Fixed security problem if req->path contained '..'.

5.57    2005-11-20 22:45:00
        - Updated uri_for to accept undef actions
        - Switched to Module::Install
        - Renamed tests for easier editing
        - Reformatted documentation
        - Renamed -nonew to -force
        - Added PAR support
        - Added keep-alive support and bug fixes to HTTP engine.
          (Sascha Kiefer)
        - Added daemonize option to FastCGI engine. (Sam Vilain)

5.56   2005-11-16 10:33:00
        - Fixed FastCGI engine to not clobber the global %ENV on each
          request. (Sam Vilain)
        - Updated benchmarking to work with detach
        - Fixed dispatcher, so $c->req->action(undef) works again
        - Updated Catalyst::Test to use HTTP::Request::AsCGI
        - Added -pidfile to external FastCGI server.

5.55    2005-11-15 12:55:00
        - Fixed multiple cookie handling

5.54    2005-11-14 22:55:00
        - Fixed a Module::Pluggable::Fast related bug

5.53    2005-11-14 15:55:00
        - Removed t/04prereq.t that was testing for non-required
          modules.

5.52    2005-11-14 10:57:00
        - Strip '..'s in static urls to fix security issue.

5.51    2005-11-14 00:45:00
        - Changed uri_for to use namespace instead of match.

5.50    2005-11-13 20:45:00
        - Fixed minor bugs.
        - Updated docs.

5.49_05 2005-11-12 20:45:00
        - Large update to the documentation. (David Kamholz)
        - Fixed args handling in forward()
        - Fixed forwarding to classes
        - Fixed catalyst.pl-generated Build.PL Makefile section.
        - Fixed relative forwarding
        - Fixed forward arrows in debug output

5.49_04 2005-11-09 23:00:00
        - Made context, dispatcher, engine, request and response classes
          configurable.
        - Added $c->stack.
        - Fixed dispatcher to ignore unknown attributes.
        - Improved format of startup debug log.
        - Updated built in server to restart on win32. (Will Hawes)
        - Fixed streaming write from a filehandle to stop writing
          if the browser is closed.
        - Added $c->controller, $c->model and $c->view shortcuts.
        - Switched to Text::SimpleTable.

5.49_03 2005-11-03 12:00:00
        - Fixed $c->req->{path} for backwards-compatibility.
        - Allow debug to be disabled via ENV as well as enabled.
        - Added -scripts option to catalyst.pl for script updating
        - Changed helpers to default to long types, Controller instead of C
        - Added Catalyst::Controller, Catalyst::Model and Catalyst::View
          base classes
        - Added JavaScript to debug screen to show and hide specific dumps
        - Added _DISPATCH, _BEGIN, _AUTO, _ACTION and _END actions
        - Added multi process external FastCGI support
          (see myapp_fastcgi.pl -help) (Sam Vilain)
        - Restarter process in HTTP engine now properly exits when the
          parent app is shut down.
        - Improved performance of restarter loop while watching for
          changed files.
        - Restarter will now detect new files added to an app on systems
          that change directory mtimes when new files are created.
        - Restarter now properly handles modules that are deleted from an
          application.
        - Fixed memory leak in TestApp.

5.49_02 2005-10-26 12:39:00
        - Whole new dispatcher!
        - Added index action
        - Added path_to method
        - Added support for passing an IO::Handle object to $c->res->body.
          (Andrew Bramble)
        - Added a new welcome screen.
        - Included Catalyst buttons and icons in helper.
        - Added Static::Simple plugin to core.
        - Added self restarting test server
        - Added filename to debug output for uploaded files.
        - Fixed forwarding with embedded arguments.
        - Fixed handling of escaped query strings.
        - Added upload parameters back into $c->req->params.
        - Added multiple paths support to dispatcher
        - Fixed bug in req->path where changing the path added a trailing
          slash.
        - Removed req->handle and res->handle
        - Added prepare_body_chunk method as a hook for upload progress.
        - Fixed bug in uri_for method when base has no path.
        - Added automated tests for HTTP, CGI, and FastCGI servers.

5.49_01 2005-10-10 10:15:00
        - Refactored all internals, should be 99% compatible to previous
          versions.
        - *IMPORTANT* The Apache engines have been moved to a separate package
          for this release.  Please install Catalyst::Engine::Apache if you
          need Apache support.

        - Added support for calling forward with arguments in the path, i.e.
          $c->forward('/foo/bar/arg1/arg2')
        - Made $c->req->uri a URI object, added req->path_info for CGI compat.
          Raw query string is available as $c->req->uri->query.
        - Made $c->req->base a URI object.
        - Parameters with multiple values (?a=1&a=2) now display properly
          in the debug output.
        - Semi-colon separators in query strings now work properly.
        - Expanded documentation of catalyst.pl (Andrew Ford)
        - Added support for running as a backend server behind a frontend
          proxy so req->base and req->address are set properly.
        - Added an 'abort' method to the Log api, so that you can
          kill loggging for a whole request.
        - Added $c->uri_for method to simplify url handling.
        - Added more tests and reorganized the t directory.
        - Reimplemented core engines, all are now CGI based for better test
          coverage and maintainability.
        - Added fork support to built in test server.
        - Fixed all memory leaks.
        - Thread-related bug fixes and tests.  We now believe the Catalyst
          core to be thread-safe.
        - Added streaming IO support through $c->req->read() and
          $c->res->write()
        - Added MyApp->config->{parse_on_demand} (streaming input)
        - Added $c->req->handle and $c->res->handle
        - Improved documentation
        - Fixed mkpath in Catalyst::Helper (Autrijus Tang)
        - Fixed bug in dispatcher where an invalid path could call a valid
          action. (Andy Grundman)
        - Fixed Helper so it works with CRLF line-endings. (Andy Grundman)

5.33  2005-08-10 15:25:00
        - Now with updated manifest.

5.32  2005-08-10 15:10:00
        - Dispatcher might fail if object returns false.

5.31  2005-06-04 12:35:00 (never released to CPAN)

        - helpers now create .new files where files already exist and differ
        - fixed $Data::Dumper::Terse (Robin Berjon)
        - added arguments for detach
        - new credits section in POD
        - fixed detach to allow relative action names (Matt and Robert)
        - added the ability to have whitespaces in Path( '' ) and Regex( '' )

5.30  2005-06-04 12:35:00

        - Fixed a bug where it was not possible to $c->forward to a
          component
          that was not inheriting from Catalyst::Base.
        - Fix for inheritance bug.
        - Allow forward with arguments.
        - Updated cookbook
        - Allow overriding home/root in config.
        - make module build cons README automatically.
        - prettify home path by resolving '..' (Andy Grundman)
        - improved helper templates a bit, new naming scheme for tests.
        - added support for case sensitivity, MyApp->config->{case_sensitive}
        - added $c->detach for non-returning forwards
        - added unified error handling, Catalyst::Exception
        - added section on param handling in Intro.pod
        - added $c->request->cookie
        - added Catalyst::Setup
        - refactored Catalyst::import()
        - improved rendering of error messages in debug mode
        - fixed a bug in Catalyst::Helper::mk_dir
        - further doc changes, esp. to Intro.pod

5.23  2005-06-03 02:30:00
        - added support for non Catalyst::Base components to live in namespace
        - improved concurrency connections in Catalyst::Engine::HTTP::Daemon

5.22  2005-05-26 14:24:00
        - improved base locating in MP engines
        - improved error messages in C::E::HTTP::Daemon
        - hostnames are now resolved on demand unless provided by engine
        - fixed memory leak in $c->execute (Michael Reece, Matt S Trout)

5.21  2005-05-24 14:56:00
        - fixed a bug in https detection
        - fixed auto chain finally
        - added MYAPP_HOME and CATALYST_HOME environment variables

5.20  2005-05-18 19:52:00
        - improved uploads and parameters
        - added $c->req->protocol and $c->req->secure
        - added $c->req->user and $c->req->uri
        - improved error message when forwarding to unknown module
        - fixed win32 installer
        - added deep recursion detection
        - fixed auto actions
        - fixed inheritance in dispatcher
        - allow whitespaces between brackets and quoted string
          in Path and Regex attributes
        - new helper templates
        - installer now supports install_base and destdir
        - allow multiple Catalyst apps to run on the same mod_perl
          instance (not the same app!)
        - fixed MP2 engines
        - removed apreq dependency from all MP engines
        - added support for MP registry scripts
        - added support for LocationMatch and ScriptAliasMatch in MP engines
        - added SpeedyCGI engine

5.10  2005-04-23 11:16:00
        - updated dependencies to require latest module::pluggable::fast
        - new installer for templates and stuff using Module::Build
        - scripts are now prefixed, for being installable
        IMPORTANT: You have to regenerate the script directory,
        remove Makefile.PL and add Build.PL
        - Added compat to install Module::Build if required.
        - Improved: Params handling with MP engines
        - Fixed: Params handling on POST with CGI engine (Andy Grundman)
        - Fixed: Helper.pm on Win32 (Matt S Trout)

5.03  2005-04-19 20:35:00 (Revision 462)
        - fixed Test example (Torsten Seeman)
        - added Plugins chapter to manual
        - applied doc patch from Robert Boone <robert@rlb3.com>
        - improved Dispatcher error messages.
        - refactored so we don't need to include helper from
          Catalyst.pm - Fixes issues with FindBin
        - applied HTTP.pm patch from Andy Grundman <andy@hybridized.org>
        - added plugin() method for instant plugins
        - FCGI is no more considered experimental

5.02  2005-04-18 10:00:00
        - fixed manifest

5.01  2005-04-17 23:00:00
        - some documentation bugs fixed
        - added Catalyst::Utils
        - fixed regexp bug (Matt S Trout)
        - fixed upload bug with MP19
        - added $c->req->body
        - aliased $c->res->output to $c->res->body
        - Read AUTHOR from passwd or $ENV{AUTHOR} when
          generating code.
        - extended attribute handling
        - added global config for components

5.00  2005-04-15 18:00:00
        - new core to support inheritance trees
        - new syntax for action declaration
        - new helper system using TT2
        - problems with mod_perl2 fixed
        - added Test::Pod support
        - added new server backend with HTTP/1.1 support
        - added option to run tests against a remote server
        - renamed errors() to error()
        - more better docs
        - countless minor improvements
          IMPORTANT: This release is very incompatible to previous ones
          and you have to regenerate the helper scripts again...

4.34  2005-03-23 07:00:00 2005
        - added some messages to Makefile.PL
        - added Catalyst::Engine::Test
        - added Catalyst::Engine::CGI::NPH
        - simplified Catalyst::Log to be easier to implement/subclass
        - added cgi.pl
        - updated Catalyst::Test to use Catalyst::Engine::Test
        - updated helper scripts
          IMPORTANT: this will be the last time you'll have to regenerate
          the script directory. We promise!

4.33  2005-03-23 01:00:00 2005
        - documented the log() accessor method in Catalyst (Andrew Ford)
        - added optional arguments to Catalyst::Log methods (Andrew Ford)
        - removed cgi-server.pl
        - added fcgi.pl and Catalyst::Engine::FCGI
        - fixed an undef durng make test (Dan Sully)
        - new path test (Christian Hansen)
          IMPORTANT: you have to regenerate the script directory again

4.32  2005-03-22 02:10:00 2005
        - made a damn typo *AAAAAAAAAAAAAAHHHH!!!*

4.31  2005-03-22 02:00:00
        - fixed inheritance (Christian Hansen)
        - previous release was borked!
          fixed that, but you have to regenerate the scripts again :(

4.30  2005-03-21 23:00:00
        - more documentation (Andrew Ford)
        - added connection informations (Christian Hansen)
        - HTTP::Request support in Catalyst::Test (Christian Hansen)
        - moved cgi.pl to nph-cgi.pl
        - added Catalyst::Engine::Server (Christian Hansen)
        - removed Catalyst::Test::server
        - updated helper scripts
          IMPORTANT: note that you have to regenerate script/server.pl,
          script/cgi-server.pl and script/cgi.pl (now nph-cgi.pl)

4.28  2005-03-19 22:00:00
        - fixed isa tree (Christian Hansen)
        - added script/cgi-server.pl, so no more server restarting after
          code changes
        - reworked documentation (Andrew Ford <A.Ford@ford-mason.co.uk>)

4.27  2005-03-19 01:00:00
        - debug message for parameters
        - Fix redirects (Christian Hansen <ch@ngmedia.com>)
        - some random fixes
        - new helper api for Catalyst::Helper::* support
          you have to update script/create.pl to use it

4.26  2005-03-16 10:00:00
        - fixed the weird bug that caused regex actions to fail on every
          second request
        - more debug messages
        - 100% pod coverage.

4.25  2005-03-12 18:00:00
        - correct perl pathes for helper generated scripts (Tatsuhiko Miyagawa)
        - improved cgi engine docs (Christoper Hicks)

4.24  2005-03-12 01:00:00
        - updated cookbook example
        - fixed base for apache and https (Andrew Ruthven)

4.23  2005-03-09 20:00:00
        - no more regex actions in forward
        - added support for test directories t/m, t/v and t/c

4.22  2005-03-08 20:00:00
        - catch errors in application class
        - handle die properly.

4.21  2005-03-05 17:00:00
        - fixed docs

4.20  2005-03-04 22:00:00
        - moved bin to script

4.13  2005-03-03 11:00:00
        - improved documentation
        - pod coverage test for helper generated apps
        - new helper api

4.12  2005-03-02 11:00:00 2005
        - server_base sucks, removed
        - added $c->log->dump()

4.11  2005-03-02 11:00:00 2005
        - removed some warnings
        - improved docs
        - private prefixed actions override private non prefixed actions
        - added server_base
        - updated Catalyst::Manual::Intro

4.10  2005-03-02 10:00:00 2005
        - improved documentation
        - fixed upload bug
        - fixed prefixed private actions bug
        - fixed more little bugs

4.01  2005-03-01 10:00:00 2005
        - improved documentation
        - documentation fixes (Johan Lindstrom)

4.00  2005-02-27 22:00:00
        - more verbose debug messages, especially for forward()
        - implemented prefixed prvate actions, icluding built in
          !?default, !?begin and !?end
        - new Catalyst::Manual::Intro
        - new helpers, bin/catalyst
        - helper api

3.11  2005-02-23 21:00:00
        - added dependency to UNIVERSAL::require (Marcus Ramberg)
        - added a little workaround for a warning in Catalyst::Test
          (Marcus Ramberg)
        - improved documentation for actions

3.10  2005-02-19 20:00:00
        - removed roles management from Catalyst::Engine
          and added it to Catalyst::Plugin::Authentication::CDBI

3.04  2005-02-17 21:00:00
        - error reporting for app class
        - no more engine debug messages
        - class->method forwards get resolved now

3.03  2005-02-16 23:00:00
        - friendlier statistics

3.02  2005-02-16 22:00:00
        - fixed unintialized actions (Marcus Ramberg)

3.01  2005-02-16 20:30:00
        - better statistics

3.00  2005-02-16 20:00:00
        - real version number for CPAN.pm
        - fixed redirect in CGI engine
        - more statistics in debug logs
        - ? prefix for forward()

2.99_15  2005-02-02 22:00:00
        - support for short namespaces, MyApp::M, MyApp::V and MyApp::C
        - Replaced "Catched" with "Caught" in Catalyst::Engine
          (Gary Ashton Jones)
        - replaced _ with ! for private actions
        - added ? for prefixed actions
        - misc improvememts

2.99_14  2005-01-31 22:00:00 2005
        - arguments for _default
        - $c->entrance removed for more flexibility
        - added $c->req->method

2.99_13  2005-01-30 18:00:00 2005
        - POD fixes and improvements

2.99_12  2005-01-28 22:00:00 2005
        - first development release
